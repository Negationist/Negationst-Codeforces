mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
int B = 1e9+7;
uniform_int_distribution<int> dist(1,B-1);
int A = dist(rng);

void computehash(string &s, vi &h){
    int n = s.size();
    h[0] = s[0];
    for(int i=1;i<n;i++){
        h[i] = (h[i-1]*A + s[i])%B;
    }
}

void makepower(vi &pow){
int n = pow.size();    
pow[0] = 1;
    for(int i=1;i<n;i++){
        pow[i] = (pow[i-1]*A)%B;
    }
}